{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport axiosInstance from \"../../../services/axios\";\n\nconst getLeaderboard = async () => {\n  return await axiosInstance.get('/users/leaderboard');\n};\n\nexport const useGetLeaderboard = () => {\n  _s();\n\n  // { isLoading, isError, error, data, refetch }\n  // The Needed Data Must Be data.data\n  return useQuery(\"get-leaderboard\", getLeaderboard);\n};\n\n_s(useGetLeaderboard, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","axiosInstance","getLeaderboard","get","useGetLeaderboard"],"sources":["/home/artificialubuntu/Desktop/Programming/Web/SEUniversityProject/client/src/hooks/api/users/useGetLeaderboard.js"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport axiosInstance from \"../../../services/axios\";\n\nconst getLeaderboard = async() => {\n    return await axiosInstance.get('/users/leaderboard')\n}\n\nexport const useGetLeaderboard = () => {\n    // { isLoading, isError, error, data, refetch }\n    // The Needed Data Must Be data.data\n    return useQuery(\"get-leaderboard\", getLeaderboard)\n}"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAEA,MAAMC,cAAc,GAAG,YAAW;EAC9B,OAAO,MAAMD,aAAa,CAACE,GAAd,CAAkB,oBAAlB,CAAb;AACH,CAFD;;AAIA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EAAA;;EACnC;EACA;EACA,OAAOJ,QAAQ,CAAC,iBAAD,EAAoBE,cAApB,CAAf;AACH,CAJM;;GAAME,iB;UAGFJ,Q"},"metadata":{},"sourceType":"module"}